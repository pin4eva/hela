"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportTypes = void 0;
var apollo_server_express_1 = require("apollo-server-express");
exports.ReportTypes = apollo_server_express_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type Report {\n    _id: ID\n    court: String\n    title: String\n    summary: String\n    year: String\n    date: Date\n    vol: String\n    body: String\n    likes: Int\n    caseRef: String\n    slug: String\n    createdAt: Date\n    comments: [RepComment]\n    added_by: User\n    updated_by: User\n    parties: String\n  }\n\n  type RepComment {\n    _id: ID\n    author: User\n    content: String!\n    likes: Int\n    approved: Boolean\n    createdAt: Date\n    report: Report\n  }\n\n  input ReportInput {\n    _id: ID\n    court: String\n\n    title: String\n\n    summary: String\n    year: String\n    date: Date\n\n    vol: String\n    body: String\n  }\n  extend type Query {\n    # Report\n    getReports: [Report]\n    getLimitedReports(skip: Int, limit: Int): [Report]\n    getReport(slug: String): Report\n    getMyReports(skip: Int, limit: Int): [Report]\n    # RepComment\n    getRepComments: [RepComment]\n    getRepCommentsByReport(report: ID): [RepComment]\n  }\n\n  extend type Mutation {\n    # Report\n    addReport(input: ReportInput): Report\n    updateReport(input: ReportInput): Report\n    deleteReport(_id: ID): Report\n    likeReport(_id: ID): Int\n    searchReport(query: String): [Report]\n\n    # RepComment\n    addRepComment(report: ID, content: String, author: ID): RepComment\n    likeRepComment(_id: ID): RepComment\n    deleteRepComment(_id: ID): RepComment\n  }\n"], ["\n  type Report {\n    _id: ID\n    court: String\n    title: String\n    summary: String\n    year: String\n    date: Date\n    vol: String\n    body: String\n    likes: Int\n    caseRef: String\n    slug: String\n    createdAt: Date\n    comments: [RepComment]\n    added_by: User\n    updated_by: User\n    parties: String\n  }\n\n  type RepComment {\n    _id: ID\n    author: User\n    content: String!\n    likes: Int\n    approved: Boolean\n    createdAt: Date\n    report: Report\n  }\n\n  input ReportInput {\n    _id: ID\n    court: String\n\n    title: String\n\n    summary: String\n    year: String\n    date: Date\n\n    vol: String\n    body: String\n  }\n  extend type Query {\n    # Report\n    getReports: [Report]\n    getLimitedReports(skip: Int, limit: Int): [Report]\n    getReport(slug: String): Report\n    getMyReports(skip: Int, limit: Int): [Report]\n    # RepComment\n    getRepComments: [RepComment]\n    getRepCommentsByReport(report: ID): [RepComment]\n  }\n\n  extend type Mutation {\n    # Report\n    addReport(input: ReportInput): Report\n    updateReport(input: ReportInput): Report\n    deleteReport(_id: ID): Report\n    likeReport(_id: ID): Int\n    searchReport(query: String): [Report]\n\n    # RepComment\n    addRepComment(report: ID, content: String, author: ID): RepComment\n    likeRepComment(_id: ID): RepComment\n    deleteRepComment(_id: ID): RepComment\n  }\n"])));
var templateObject_1;
